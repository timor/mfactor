!-*- mode: factor -*-
USING: ;
IN: primitives

! describes stack effects and internal name of primitive functions

PRIM: swap ( x y -- y x ) "swap" ;
PRIM: dup ( x -- x x ) "dup" ;
PRIM: drop ( x -- ) "drop" ;
PRIM: >r ( x -- ) "to_r" ;
PRIM: r> ( -- x ) "r_from" ;
PRIM: call ( x -- ) "call" ;
PRIM: nop ( -- ) "nop" ;
PRIM: instbase ( -- i ) "instbase" ;
PRIM: = ( x x -- ? ) "eql" ;
PRIM: < ( x x -- ? ) "gt" ;
PRIM: > ( x x -- ? ) "lt" ;
PRIM: emit ( x -- ) "emit" ;
PRIM: pwrite ( x -- ) "pwrite" ;
PRIM: pwritex ( x -- ) "pwritex" ;
PRIM: writex ( x -- ) "writex" ;
PRIM: cell ( -- i ) "cell" ;
PRIM: + ( x x -- x ) "add" ;
PRIM: - ( x x -- x ) "sub" ;
PRIM: * ( x x -- x ) "mul" ;
PRIM: asl ( x x -- x ) "asl" ;
PRIM: asr ( x x -- x ) "asr" ;
PRIM: / ( x x -- x ) "div" ;
PRIM: mod ( x x -- x ) "mod" ;
PRIM: bitand ( x x -- x ) "bitand" ;
PRIM: bitor ( x x -- x ) "bitor" ;
PRIM: bitxor ( x x -- x ) "bitxor" ;
PRIM: bitnot ( x -- x ) "bitnot" ;
PRIM: neg ( x -- x ) "neg" ;
PRIM: receive ( -- b ) "receive" ;
PRIM: special> ( n -- val ) "get_special" ;
PRIM: >special ( val n -- ) "set_special" ;
PRIM: get-sp ( n -- addr ) "get_sp" ;
PRIM: set-sp ( addr n -- ) "set_sp" ;
PRIM: ? ( ? x x -- x ) "truefalse" ;
PRIM: memstart ( -- addr ) "memstart" ;
PRIM: memrange ( -- a a a a ) "memrange" ;
PRIM: oplit ( -- ) "oplit" ;
PRIM: qstart ( -- ) "qstart" ;
PRIM: qend ( -- ) "qend" ;
PRIM: error ( -- ) "error" ;
PRIM: reset ( -- ) "reset" ;
PRIM: dictstart ( -- addr ) "dictstart" ;
PRIM: dictend ( -- addr ) "dictend" ;
PRIM: parsenum ( str -- num/str success? ) "parsenum" ;
PRIM: token ( -- str ) "token" ;
PRIM: st ( -- ) "stack_show" ;
PRIM: level ( -- i ) "stack_level" ;
PRIM: search ( str -- dictentry/name found? ) "search" ;
PRIM: lookup-name ( str -- dict-entry ) "lookup_name" ;
PRIM: setmem ( x loc -- ) "setmem" ;
PRIM: setmem8 ( x loc -- ) "setmem8" ;
PRIM: getmem ( loc -- x ) "getmem" ;
PRIM: getmem8 ( loc -- x ) "getmem8" ;
PRIM: bcall ( quot: ( ..a -- ..b ) -- ..b ) "call" ;
PRIM: acall ( quot: ( ..a -- ..b ) -- ..b ) "acall" ;
PRIM: liti ( -- i ) "liti" ;
! getting an address from the foreign-function lut ( i -- addr )
PRIM: ff ( i -- addr ) "ff";
PRIM: ccall_b ( ff b -- x ) "ccall_b" ;
PRIM: ccall_i ( ff i -- x ) "ccall_i" ;
PRIM: ccall_bi ( ff b i -- x ) "ccall_bi" ;
PRIM: ccall_is ( ff i s -- x ) "ccall_is" ;
PRIM: ccall_iis ( ff i i s -- x ) "ccall_iis" ;
PRIM: ccall_iii ( ff i i i -- x ) "ccall_iii" ;
PRIM: ccall_v ( ff -- x ) "ccall_v" ;
PRIM: ccall_lit ( ff -- addr ) "ccall_lit" ;
