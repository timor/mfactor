!-*- mode: factor -*-
USING: kernel strings sequences memory ;
IN: vocabs


! dictionary handling

! dict_entry layout: addr(4)|flag(1)|name-header(1)|namelength(1)|name(namelength)
! name of dict entry
: _name>> ( dictentry -- str ) cell + 2 + ;
: parsing-word? ( dictentry -- ? ) cell + getmem 0x01 bitand ;
: _quot>> ( dictentry -- quot ) getmem ;
! find next free dictionary entry (check for first name byte = 0)
: dict-next ( dict-entry -- dict-entry ) _name>> dup strlen + 1 + ;

! actually call the quotation associated with word
: execute ( word -- effect ) _quot>> call ; nocompile

! dictionary entry considered valid if
: dict-valid? ( dict-entry -- ? ) _name>> strlen 0 = not ;
: dict-map ( q: ( ... dict-entry -- ... ) -- )
    dictstart [ dup dict-valid? ] [ [ swap call ] 2keep dict-next ] while 2drop ;
: _free-name ( -- addr ) dictstart [ dup dict-valid? ] [ dict-next ] while ;

! test dictionary access by enumerating all dictionary entries
! : dict-enum ( -- ) [ [ _name>> print ": " print ] [ .x ] bi ] dict-map ;

! save quotation in dictionary, non-immediate, name is counted string, add terminating 0 for compatibility
: rename ( quot dictentry -- ) setmem ;
: name ( quot name -- ) search [ rename ] [ _free-name [ swap , 0 b, dup strlen 1 + b, [ b, ] ba-each 0 b, ] with-MP ] if ;
! compare read token to header name, problem: name has terminal 0 byte which must not be checked
: name= ( str name -- ? ) [ uncount ] bi@ [ swap ] dip 1 - over = [ mem= ] [ 3drop f ] if ;

! dictionary usage
: dsize ( -- n1 n2 ) dictend dictstart - _free-name dictstart - ;

