! -*- mode: factor -*-
USING: kernel sequences listener memory bcomp io prettyprint syntax ;
IN: tests

! some unit tests
: _lcheck ( -- ) level 0 = [ "!stack not empty!" print nl ] unless ;
: _test-emit ( -- ) 'c' emit [ f ] loop nl ;
: _test-int ( -- ) 0xaffecafe .x ;
: _test-loop ( -- ) 5 [ dup '0' + emit 1 - dup ] loop . ;
: _test-mem ( -- ) 254 memstart setmem8 175 memstart 1 + setmem8 memstart getmem .x ;
: _test-while ( -- ) 5 [ dup 0 = not ] [ [ '0' + emit ] [ 1 - ] bi ] while . ;
: _test-ba-each ( -- ) B{ 5 4 3 2 1 } [ '0' + emit ] ba-each 0 . ;
: _test-do-until ( -- ) 5 [ dup 0 = ] [ [ '0' + emit ] [ 1 - ] bi ] do until . ;
: _test-ia ( -- ia ) I{ 1 2 } 10 [ dup getmem8 pwritex ' ' emit 1 + ] times drop nl ;
: _test-ia-each ( -- ) I{ 5 4 3 2 1 } [ '0' + emit ] ia-each 0 . ;
: _test-times ( -- ) '!' 3 [ dup emit ] times drop nl ;
: _test-string ( -- ) "abcde" 7 [ [ getmem8 pwritex ' ' emit ] [ 1 + ] bi ] times drop nl ;
: _test-stack2string ( -- ) 'h' 'e' 'l' 'l' 'o' 5 _stack2string print nl ;
! that one is interactive!
: _test-string-reader ( -- ) "enter some chars, terminate with \"" print
   0 _read-string-and-compile nl
   [ 5 = ] dip 1 = and [ "!accumulator wrong!" print nl ] unless
   print nl ;
: _run-tests ( -- ) nl [ [ 'b' emit ] 'a' emit call ] call
    _test-emit _lcheck
    _test-int _lcheck
    _test-loop _lcheck
    _test-mem _lcheck
    _init_storage _lcheck       ! need to clean up after _test-mem!
    _test-times _lcheck
    _test-while _lcheck
    _test-string _lcheck
    _test-stack2string _lcheck
    ! _test-string-reader _lcheck
    _test-ba-each _lcheck
    _test-do-until _lcheck
    _test-ia _lcheck
    _test-ia-each _lcheck
    [ "tests done." print ] call nl ;

! listener
! top level loop
: top ( -- ) _run-tests listener ;

: testloop ( -- ) [ '!' emit t ] loop ;
